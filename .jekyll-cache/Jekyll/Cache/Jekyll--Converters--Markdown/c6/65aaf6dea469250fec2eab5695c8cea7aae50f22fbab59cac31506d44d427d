I"i<h3 id="사전-준비">사전 준비</h3>

<ul>
  <li>이 포스트는 2017-08-21, ASP.NET Core 1.1 기준으로 작성되었습니다.</li>
  <li>Windows, Visual Studio 2017 환경에서 작성되었습니다.</li>
  <li>이 포스트는 <a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/app-state">asp.net core docs - ASP.NET Core - Session and application state</a>를 기준으로 작성되었습니다.
    <ol>
      <li><a href="https://www.microsoft.com/net/core#windowscmd">.NET SDK</a>가 설치되어 있지 않는 경우 설치합니다.</li>
      <li><a href="https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=community&amp;rel=15">Visual Studio</a>가 설치되어 있지 않는 경우 설치합니다.</li>
    </ol>
  </li>
</ul>

<hr />

<ul>
  <li>
    <p><strong>도구 - NuGet 패키지 관리자 - 솔루션용 NuGet 패키지 관리</strong>를 선택합니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/1.png" alt="1" /></p>
  </li>
  <li>
    <p><strong>Microsoft.AspNetCore.Session</strong>을 검색하여 <strong>1.x</strong> 버전을 다운로드 합니다. 현재 asp.net core가 2.x preview에 있으므로 본 프로젝트와 호환이 되지 않아 버전에 맞게 설치합니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/2.png" alt="2" /></p>
  </li>
  <li>
    <p><strong>Startup.cs</strong> 파일에 세션 관련 설정을 추가합니다.</p>

    <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">services</span><span class="p">.</span><span class="nf">AddSession</span><span class="p">(</span><span class="n">options</span> <span class="p">=&gt;</span>
<span class="p">{</span>
	<span class="n">options</span><span class="p">.</span><span class="n">IdleTimeout</span> <span class="p">=</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="nf">FromHoures</span><span class="p">(</span><span class="m">10</span><span class="p">);</span> <span class="c1">// 세션 만료 시간, 10시간</span>
	<span class="n">options</span><span class="p">.</span><span class="n">CookieHttpOnly</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
<span class="p">});</span>
</code></pre></div>    </div>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/3.png" alt="3" /></p>

    <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">app</span><span class="p">.</span><span class="nf">UseSession</span><span class="p">();</span>	<span class="p">![</span><span class="m">4</span><span class="p">](</span><span class="n">http</span><span class="p">:</span><span class="c1">//localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/4.png)</span>
</code></pre></div>    </div>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/4.png" alt="4" /></p>
  </li>
  <li>
    <p>컨트롤러에서 세션을 사용할 경우 <strong>ISession</strong> 객체를 가져옵니다.</p>

    <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">private</span> <span class="k">readonly</span> <span class="n">IHttpContextAccessor</span> <span class="n">_httpContextAccessor</span><span class="p">;</span>
<span class="k">private</span> <span class="n">ISession</span> <span class="n">_session</span> <span class="p">=&gt;</span> <span class="n">_httpContextAccessor</span><span class="p">.</span><span class="n">HttpContext</span><span class="p">.</span><span class="n">Session</span><span class="p">;</span>

<span class="k">public</span> <span class="nf">Controller</span><span class="p">(</span><span class="n">IHttpContextAccessor</span> <span class="n">httpContextAccessor</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">_httpContextAccessor</span> <span class="p">=</span> <span class="n">httpContextAccessor</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>    </div>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/5.png" alt="5" /></p>
  </li>
  <li>
    <p>세션 값을 추가하려면 <strong>SetString, SetInt32</strong> 메소드를 이용합니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/6.png" alt="6" /></p>
  </li>
  <li>
    <p>뷰페이지를 위해 세션 키값을 반환합니다. 이 떄 반환 형식은 <strong>IEnumerable&lt;String&gt;</strong> 입니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/7.png" alt="7" /></p>
  </li>
  <li>
    <p>세션 값을 삭제하려면 <strong>Clear</strong> 메소드를 이용합니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/8.png" alt="8" /></p>
  </li>
  <li>
    <p>예제 뷰 페이지를 생성합니다. <strong>ASP.NET Core - 웹 - ASP.NET - MVC 뷰 페이지</strong>를 생성합니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/9.png" alt="9" /></p>
  </li>
  <li>
    <p>항목 6번에서 보낸 Key값은 <strong>IEnumerable&lt;String&gt;</strong> 이므로 <strong>Model</strong>의 형식을 설정하여 줍니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/10.png" alt="10" /></p>
  </li>
  <li>
    <p>세션 객체인 <strong>ISession</strong>을 뷰페이지에서 그대로 사용하려면 아래 처럼 injection 코드를 작성합니다.</p>

    <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor _httpContextAccessor

@{
	ISession _session = _httpContextAccessor.HttpContext.Session;
}
</code></pre></div>    </div>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/11.png" alt="11" /></p>
  </li>
  <li>
    <p><strong>Index 페이지를 거쳐 SessionTest 페이지</strong>로 접근하였을 떄 결과입니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/12.png" alt="12" /></p>
  </li>
  <li>
    <p><strong>세션 Clear를 위해 SessionReset 페이지</strong>로 접근하였을 떄 결과입니다.</p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/13.png" alt="13" /></p>

    <p><img src="http://localhost:4000/img/2017-08-21-using-session-in-asp-dot-net-core/14.png" alt="14" /></p>
  </li>
</ul>
:ET